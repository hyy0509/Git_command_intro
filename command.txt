git remote: 查看远程仓库
git remote -v: 查看远程仓库的详细信息
git status: 仓库当前的状态
git diff: 修改了文件，但没有上传，查看修改的内容
git log: 查看修改历史(修改的历史记录)
git log --pretty=oneline: 查看修改历史，返回: commit id + "提交说明"
git log --pretty=oneline --abbrev-commit: 查看修改历史，返回: commit id (缩写) + "提交说明"
git reflog: 查看命令历史（返回每一次命令的内容）
git diff HEAD --readme.txt:查看工作区和版本库里最新版本的区别

把一个文件(例如: readme.txt)添加到Git仓库:
step 1: git add readme.txt      ------(把要提交的所有修改放到暂存区)         
step 2: git commit -m "提交说明"      ------(把暂存区的所有修改提交到分支)


回退:
HEAD: 当前版本
HEAD^: 上一个版本
HEAD^^: 上上一个版本
HEAD~100: 往上第100个版本
cat readme.txt: 查看文件readme.txt
git reset --hard HEAD^: 回退到上一个版本
git reset --hard commit id: 回退到commit id 对应的版本


管理修改:
Remark: Git跟踪管理的是修改，而不是文件。
例 1: 若操作过程为:
step 1: 第一次修改
step 2: git add
step 3: 第二次修改
step 4: git commit
这里，git add 将第一次修改放到了暂存区，因此git commit 提交的是第一次修改，而非第二次。
例 2: 若操作过程为:
step 1: 第一次修改
step 2: git add
step 3: 第二次修改
step 4: git add
step 5: git commit
这里则将两次修改合并提交。


撤销修改：
git checkout -- readme.txt: 把readme.txt文件在工作区的修改全部撤销。此时有两种情况:
情况 1: readme.txt 自修改后还没有放到暂存区，则撤销修改回到了和版本库一模一样的状态；
情况 2: readme.txt 已经添加得到暂存区后，又做了修改，则撤销回到添加到暂存区后的状态。
总之，文件回到最近一次git commit或git add时的状态。
git reset HEAD readme.txt: 撤销掉暂存区的修改，重新放回到工作区


删除文件:




